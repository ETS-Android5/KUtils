<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.kiven.pushlibrary" >

    <!-- 小米推送 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!--<permission android:name="com.xiaomi.mipushdemo.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />这里com.xiaomi.mipushdemo改成app的包名
    <uses-permission android:name="com.xiaomi.mipushdemo.permission.MIPUSH_RECEIVE" />这里com.xiaomi.mipushdemo改成app的包名-->

    <!-- vivo推送 -->
    <!--<uses-permission   android:name="android.permission.INTERNET"/>-->

    <!-- OPPO推送 -->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" />



    <application>

        <activity android:name="ClickNotiActivity">
            <intent-filter>
                <!--firebase采用action启动，服务器又不能设置category, 所以需要一个单独的 intent-filter-->
                <!-- 隐式启动：https://blog.csdn.net/Leo_Liang_jie/article/details/92836838 -->
                <action android:name="com.push.sample.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <!--指定在浏览器中的动作。当 Intent 在浏览器中被引发，都会被指定成 BROWSABLE 种类。 -->
                <!-- 有这个的话，就不能在桌面上显示了 -->
                <category android:name="android.intent.category.BROWSABLE" />
                <data
                    android:host="kiven.test.app"
                    android:path="/main"
                    android:scheme="sample" />
            </intent-filter>
        </activity>


        <service android:name=".PushService"
            android:enabled="true"
                android:process=":pushservice"
                android:persistent="true"/>
        <!--<service
            android:name=".PushNotificationListenerService"
            android:label="@string/push_notification_listener_service_name"
            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
            <intent-filter>
                <action android:name="android.service.notification.NotificationListenerService" />
            </intent-filter>
        </service>-->

        <!-- 小米推送 -->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" /> <!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" /> <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>

        <receiver
            android:name=".mi.MiPushReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>

        <!-- vivo推送 -->
        <!-- vivo推送 -->
        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true"/>

        <receiver android:name=".vivo.VivoPushReceiver">
            <intent-filter>
                <!-- 接收push消息 -->
                <action   android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>
        <!--<meta-data
            android:name="com.vivo.push.api_key"
            android:value="0a596c9e-3810-4529-8d0f-f1b42e1caa3a"/>

        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="18387"/>-->



        <!-- OPPO推送 -->
        <service
            android:name="com.heytap.mcssdk.PushService"
            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE">
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>

        <service
            android:name="com.heytap.mcssdk.AppPushService"
            android:permission="com.heytap.mcs.permission.SEND_MCS_MESSAGE">
            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>

        <!-- 华为推送 -->
        <service
            android:name="com.kiven.pushlibrary.hw.HuaWeiPushService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- firebase -->
        <service
                android:name=".firebase.ClientFirebaseMessagingService"
                android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- 禁止firebase自动初始化 -->
        <meta-data
                android:name="firebase_messaging_auto_init_enabled"
                android:value="false" />
        <meta-data
                android:name="firebase_analytics_collection_enabled"
                android:value="false" />

        <!--<meta-data android:name="vivo_push_enable" android:value="true" />
        <meta-data android:name="mi_push_enable" android:value="true" />
        <meta-data android:name="oppo_push_enable" android:value="true" />
        <meta-data android:name="firebase_push_enable" android:value="true" />
        <meta-data android:name="hms_push_enable" android:value="true" />
        <meta-data android:name="default_push_mi_or_firebase_or_none" android:value="mi" />-->

    </application>
</manifest>
